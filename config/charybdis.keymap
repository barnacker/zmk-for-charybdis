/*
 * SnthX
 * derived from https://www.reddit.com/r/KeyboardLayouts/comments/18jefux/snth/
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        qu: qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU";
        };

        ing: ing {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp G>;
            label = "ING";
        };

        eu: eu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp U>;
            label = "EU";
        };

        // Macro to activate layer and hold Ctrl+Alt

        layer_ctrlalt: layer_with_ctrlalt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 4>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_press>,
                <&kp LALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LALT>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_release>,
                <&mo 4>;

            label = "LAYER_CTRLALT";
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <250>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };

        tmo: thumb_momentary {
            compatible = "zmk,behavior-hold-tap";
            label = "TMO";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-hold-tap";
            label = "BSPC_DEL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
        };

        lingerq: linger_q {
            compatible = "zmk,behavior-hold-tap";
            label = "LINGERQ";
            bindings = <&kp>, <&qu>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
        };

        playvol: playvol {
            compatible = "zmk,behavior-hold-tap";
            label = "PLAYVOL";
            bindings = <&layer_ctrlalt>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
        };

        hmb: holdmouse {
            compatible = "zmk,behavior-hold-tap";
            label = "HMB";
            bindings = <&mkp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "hold-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <25 28>;
            layers = <0>;
            timeout-ms = <40>;
            require-prior-idle-ms = <250>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <25 26>;
            layers = <0>;
            slow-release;
            timeout-ms = <75>;
            require-prior-idle-ms = <125>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <28 31>;
            layers = <0>;
            slow-release;
            timeout-ms = <75>;
            require-prior-idle-ms = <125>;
        };

        ing {
            bindings = <&ing>;
            key-positions = <33 34>;
            timeout-ms = <75>;
            require-prior-idle-ms = <125>;
            slow-release;
            layers = <0>;
        };

        eu {
            bindings = <&eu>;
            key-positions = <32 33>;
            timeout-ms = <75>;
            require-prior-idle-ms = <125>;
            slow-release;
            layers = <0>;
        };

        // Example: Press F and B keys together to activate
    };

    keymap {
        compatible = "zmk,keymap";

        baz {
            bindings = <
&kp F1                   &kp F2      &kp F3      &kp F4       &kp F5        &kp F6                 &kp F7     &kp F8        &kp F9       &kp F10     &kp F11     &kp F12
&kp INS                  &kp F       &kp B       &kp K        &kp L         &kp J                  &kp EQUAL  &kp W         &kp SQT      &kp SLASH   &kp DOT     &kp PG_UP
&playvol 0 C_PLAY_PAUSE  &hm LGUI S  &hm LALT N  &hm LCTRL T  &hm LSHIFT H  &kp V                  &kp G      &hm RSHFT C   &hm RCTRL A  &hm RALT E  &hm RGUI I  &mo 3
&kp PRINTSCREEN          &kp X       &kp P       &kp D        &kp M         &lingerq Q 0           &kp Z      &kp Y         &kp O        &kp U       &kp COMMA   &kp PG_DN
                                                 &mo 2        &tmo 5 R      &kp BSPC               &kp DEL    &tmo 1 SPACE
                                                              &kp LS(INS)   &mt LS(DEL) LC(INS)    &kp RET
            >;
        };

        sym {
            bindings = <
&trans  &trans    &trans    &trans    &trans    &trans       &trans     &trans     &trans             &trans     &trans     &trans
&trans  &trans    &trans    &trans    &trans    &trans       &kp TILDE  &kp GRAVE  &kp DOUBLE_QUOTES  &kp BSLH   &kp COLON  &trans
&trans  &kp LBRC  &kp LPAR  &kp RPAR  &kp RBRC  &kp UNDER    &kp PIPE   &kp QMARK  &kp EXCL           &kp EQUAL  &kp AMPS   &trans
&trans  &kp LBKT  &kp LT    &kp GT    &kp RBKT  &kp CARET    &kp DLLR   &kp HASH   &kp AT             &kp PRCNT  &kp SEMI   &trans
                            &trans    &trans    &trans       &trans     &trans
                                      &trans    &trans       &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans  &trans  &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp STAR   &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp SLASH  &kp N4  &kp N5  &kp N6  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                        &trans  &trans  &trans    &trans     &kp N0
                                &trans  &trans    &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans      &trans  &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans  &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp C_PREV  &trans  &kp C_NEXT  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans  &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans      &trans    &trans  &trans
                                    &trans      &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav {
            bindings = <
&trans  &trans      &trans        &trans        &trans        &trans          &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans      &kp HOME      &kp UP        &kp END       &trans          &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans      &kp LEFT      &kp DOWN      &kp RIGHT     &trans          &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans  &trans
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &trans  &trans     &trans     &trans     &trans  &trans
                                  &trans        &trans        &trans          &trans  &trans
                                                &trans        &trans          &trans
            >;
        };
    };
};
